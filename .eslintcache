[{"/home/igor/desafio-asap/src/reportWebVitals.js":"1","/home/igor/desafio-asap/src/App.js":"2","/home/igor/desafio-asap/src/index.js":"3","/home/igor/desafio-asap/src/providers/authProvider.js":"4","/home/igor/desafio-asap/src/resources/Posts/index.js":"5","/home/igor/desafio-asap/src/resources/Users/index.js":"6","/home/igor/desafio-asap/src/resources/clients/ClientList.js":"7","/home/igor/desafio-asap/src/resources/clients/index.js":"8","/home/igor/desafio-asap/src/components/CustomActions.js":"9","/home/igor/desafio-asap/src/providers/dataProvider.js":"10","/home/igor/desafio-asap/src/providers/theme.js":"11"},{"size":362,"mtime":1611422315809,"results":"12","hashOfConfig":"13"},{"size":4875,"mtime":1611438078502,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1611422315809,"results":"15","hashOfConfig":"13"},{"size":943,"mtime":1611422315809,"results":"16","hashOfConfig":"13"},{"size":1877,"mtime":1611422315809,"results":"17","hashOfConfig":"13"},{"size":444,"mtime":1611422315809,"results":"18","hashOfConfig":"13"},{"size":983,"mtime":1611441255426,"results":"19","hashOfConfig":"13"},{"size":257,"mtime":1611438228279,"results":"20","hashOfConfig":"13"},{"size":546,"mtime":1611439913777,"results":"21","hashOfConfig":"13"},{"size":3776,"mtime":1611517697053,"results":"22","hashOfConfig":"13"},{"size":1428,"mtime":1611442489683,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zfymzf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/igor/desafio-asap/src/reportWebVitals.js",[],["50","51"],"/home/igor/desafio-asap/src/App.js",["52","53","54"],"/home/igor/desafio-asap/src/index.js",[],["55","56"],"/home/igor/desafio-asap/src/providers/authProvider.js",["57"],"export default {\n  // called when the user attempts to log in\n  login: ({ username }) => {\n    localStorage.setItem(\"username\", username);\n    // accept all username/password combinations\n    return Promise.resolve();\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    localStorage.removeItem(\"username\");\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"username\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    return localStorage.getItem(\"username\")\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve(),\n};\n","/home/igor/desafio-asap/src/resources/Posts/index.js",["58"],"import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  ReferenceField,\n  EditButton,\n  Edit,\n  SimpleForm,\n  ReferenceInput,\n  SelectInput,\n  TextInput,\n  Create,\n  Filter,\n  TopToolbar,\n  ListButton,\n  ShowButton,\n} from \"react-admin\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\n\nconst PostTitle = ({ record }) => {\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\n};\n\nconst PostEditActions = ({ basePath, data }) => (\n  <TopToolbar style={{ justifyContent: \"flex-start\" }}>\n    <ListButton basePath={basePath} label=\"Voltar\" icon={<ChevronLeft />} />\n  </TopToolbar>\n);\n\nconst PostFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Buscar\" source=\"q\" alwaysOn />\n    <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>\n  </Filter>\n);\n\nexport const PostList = (props) => (\n  <List filters={<PostFilter />} {...props}>\n    <Datagrid rowClick=\"edit\">\n      <ReferenceField source=\"userId\" reference=\"users\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n      <TextField source=\"title\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport const PostEdit = (props) => (\n  <Edit {...props} actions={<PostEditActions />} title={<PostTitle />}>\n    <SimpleForm>\n      <ReferenceInput source=\"userId\" reference=\"users\">\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"title\" />\n      <TextInput multiline source=\"body\" />\n    </SimpleForm>\n  </Edit>\n);\n\nexport const PostCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <ReferenceInput source=\"userId\" reference=\"users\">\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"title\" />\n      <TextInput multiline source=\"body\" />\n    </SimpleForm>\n  </Create>\n);\n","/home/igor/desafio-asap/src/resources/Users/index.js",[],"/home/igor/desafio-asap/src/resources/clients/ClientList.js",[],"/home/igor/desafio-asap/src/resources/clients/index.js",["59","60"],"/home/igor/desafio-asap/src/components/CustomActions.js",[],"/home/igor/desafio-asap/src/providers/dataProvider.js",[],"/home/igor/desafio-asap/src/providers/theme.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":27,"nodeType":"67","messageId":"68","endLine":2,"endColumn":38},{"ruleId":"65","severity":1,"message":"69","line":2,"column":40,"nodeType":"67","messageId":"68","endLine":2,"endColumn":51},{"ruleId":"65","severity":1,"message":"70","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":26},{"ruleId":"61","replacedBy":"71"},{"ruleId":"63","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":1,"nodeType":"75","endLine":29,"endColumn":3},{"ruleId":"65","severity":1,"message":"76","line":17,"column":3,"nodeType":"67","messageId":"68","endLine":17,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":7,"column":1,"nodeType":"75","endLine":12,"endColumn":3},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'ListGuesser' is defined but never used.","Identifier","unusedVar","'EditGuesser' is defined but never used.","'jsonServerProvider' is defined but never used.",["77"],["78"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ShowButton' is defined but never used.","no-global-assign","no-unsafe-negation"]